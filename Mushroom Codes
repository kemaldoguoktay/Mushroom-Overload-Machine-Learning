{"metadata":{"colab":{"toc_visible":true,"provenance":[]},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9100312,"sourceType":"datasetVersion","datasetId":5490971}],"dockerImageVersionId":30761,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/kemaldouoktay/mushroom-kemal?scriptVersionId=197308018\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"\n# IMPORTANT: RUN THIS CELL IN ORDER TO IMPORT YOUR KAGGLE DATA SOURCES\n# TO THE CORRECT LOCATION (/kaggle/input) IN YOUR NOTEBOOK,\n# THEN FEEL FREE TO DELETE THIS CELL.\n# NOTE: THIS NOTEBOOK ENVIRONMENT DIFFERS FROM KAGGLE'S PYTHON\n# ENVIRONMENT SO THERE MAY BE MISSING LIBRARIES USED BY YOUR\n# NOTEBOOK.\n\nimport os\nimport sys\nfrom tempfile import NamedTemporaryFile\nfrom urllib.request import urlopen\nfrom urllib.parse import unquote, urlparse\nfrom urllib.error import HTTPError\nfrom zipfile import ZipFile\nimport tarfile\nimport shutil\n\nCHUNK_SIZE = 40960\nDATA_SOURCE_MAPPING = 'mushroom-overload:https%3A%2F%2Fstorage.googleapis.com%2Fkaggle-data-sets%2F5490971%2F9100312%2Fbundle%2Farchive.zip%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com%252F20240916%252Fauto%252Fstorage%252Fgoog4_request%26X-Goog-Date%3D20240916T180053Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D934cd41b10233f7f34bbcf60ca6e4079894214d3a6fd9ca265da9efa010c50513efdd67e6edc56cad634cf82588c017b3a79ca7a3c04eaed1bfe448b29634473c060c891c8902735177edb8ac0142dbb14cf4451fcee6295fe2bb9215680638614c37bf35945a104a98b3fb70b58e74b3607f441236daa47ba31af36f6c082c0a143853e6852bb2e4431c978756f908158eecb31dea88225f493a45a5bfe1df91244552cc3514d8462870c75c86ace2a5ee62e112ec5ad436fe1053491acfd0426f3a010c293bdde5efa995807d921232e0a21bbfdc59ee63bb808f69ac628dca0af49745c6726ca180e8612b4167657a1f5ee5d7c08855f0b3626db48427e3c'\n\nKAGGLE_INPUT_PATH='/kaggle/input'\nKAGGLE_WORKING_PATH='/kaggle/working'\nKAGGLE_SYMLINK='kaggle'\n\n!umount /kaggle/input/ 2> /dev/null\nshutil.rmtree('/kaggle/input', ignore_errors=True)\nos.makedirs(KAGGLE_INPUT_PATH, 0o777, exist_ok=True)\nos.makedirs(KAGGLE_WORKING_PATH, 0o777, exist_ok=True)\n\ntry:\n  os.symlink(KAGGLE_INPUT_PATH, os.path.join(\"..\", 'input'), target_is_directory=True)\nexcept FileExistsError:\n  pass\ntry:\n  os.symlink(KAGGLE_WORKING_PATH, os.path.join(\"..\", 'working'), target_is_directory=True)\nexcept FileExistsError:\n  pass\n\nfor data_source_mapping in DATA_SOURCE_MAPPING.split(','):\n    directory, download_url_encoded = data_source_mapping.split(':')\n    download_url = unquote(download_url_encoded)\n    filename = urlparse(download_url).path\n    destination_path = os.path.join(KAGGLE_INPUT_PATH, directory)\n    try:\n        with urlopen(download_url) as fileres, NamedTemporaryFile() as tfile:\n            total_length = fileres.headers['content-length']\n            print(f'Downloading {directory}, {total_length} bytes compressed')\n            dl = 0\n            data = fileres.read(CHUNK_SIZE)\n            while len(data) > 0:\n                dl += len(data)\n                tfile.write(data)\n                done = int(50 * dl / int(total_length))\n                sys.stdout.write(f\"\\r[{'=' * done}{' ' * (50-done)}] {dl} bytes downloaded\")\n                sys.stdout.flush()\n                data = fileres.read(CHUNK_SIZE)\n            if filename.endswith('.zip'):\n              with ZipFile(tfile) as zfile:\n                zfile.extractall(destination_path)\n            else:\n              with tarfile.open(tfile.name) as tarfile:\n                tarfile.extractall(destination_path)\n            print(f'\\nDownloaded and uncompressed: {directory}')\n    except HTTPError as e:\n        print(f'Failed to load (likely expired) {download_url} to path {destination_path}')\n        continue\n    except OSError as e:\n        print(f'Failed to load {download_url} to path {destination_path}')\n        continue\n\nprint('Data source import complete.')\n","metadata":{"id":"uxsoHDie_quX","outputId":"a61edca3-3717-4640-a081-16ed42c4b493","execution":{"iopub.status.busy":"2024-09-19T13:48:57.069241Z","iopub.execute_input":"2024-09-19T13:48:57.069677Z","iopub.status.idle":"2024-09-19T13:49:18.232082Z","shell.execute_reply.started":"2024-09-19T13:48:57.069636Z","shell.execute_reply":"2024-09-19T13:49:18.230656Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Gerekli olan kütüphaneleri indirdim","metadata":{"id":"Q5pK8WNxLkc8"}},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.cluster import KMeans\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.tree import plot_tree\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import learning_curve\nfrom sklearn.metrics import accuracy_score, classification_report\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import silhouette_score\nfrom sklearn.decomposition import PCA\nfrom scipy.stats import chi2_contingency\nfrom tqdm import tqdm\nimport warnings\nwarnings.filterwarnings('ignore')","metadata":{"id":"KiimJVsUuTn0","execution":{"iopub.status.busy":"2024-09-19T13:49:18.234946Z","iopub.execute_input":"2024-09-19T13:49:18.235998Z","iopub.status.idle":"2024-09-19T13:49:20.040456Z","shell.execute_reply.started":"2024-09-19T13:49:18.235956Z","shell.execute_reply":"2024-09-19T13:49:20.038973Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Dosyayı okudum","metadata":{"id":"YxJNntkADf1R"}},{"cell_type":"code","source":"df = pd.read_csv(\"/kaggle/input/mushroom-overload/mushroom_overload.csv\")","metadata":{"id":"deH2-F-ODjwA","execution":{"iopub.status.busy":"2024-09-19T13:49:20.041804Z","iopub.execute_input":"2024-09-19T13:49:20.042323Z","iopub.status.idle":"2024-09-19T13:49:41.412228Z","shell.execute_reply.started":"2024-09-19T13:49:20.042282Z","shell.execute_reply":"2024-09-19T13:49:41.410713Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"İlk olarak elimdeki datasetin şeklini ve boyutunu öğrendim.\n\n> 6 milyondan fazla satır ve 21 adet sütun\n\n","metadata":{"id":"x0qTdL8KCBuP"}},{"cell_type":"code","source":"df.shape","metadata":{"id":"bQwXZcffBrxp","outputId":"39ddcee3-7baa-4ad4-b26b-c70d61bdbc11","execution":{"iopub.status.busy":"2024-09-19T13:49:41.415512Z","iopub.execute_input":"2024-09-19T13:49:41.415979Z","iopub.status.idle":"2024-09-19T13:49:41.426816Z","shell.execute_reply.started":"2024-09-19T13:49:41.415929Z","shell.execute_reply":"2024-09-19T13:49:41.425793Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Elimdeki dataset'in satır sayısı çok yüksek olduğu için bu sayıyı 1.000.000'a indirip zamandan ve performanstan tasarruf sağladım.","metadata":{"id":"8t9WjSAPHmQb"}},{"cell_type":"code","source":"# sample methodu kullanarak popülasyonu temsil edebilecek bir örneklem oluşturdum.\n\ndf = df.sample(1000000)","metadata":{"id":"oatHuVElJJOs","execution":{"iopub.status.busy":"2024-09-19T13:49:41.42851Z","iopub.execute_input":"2024-09-19T13:49:41.428967Z","iopub.status.idle":"2024-09-19T13:49:44.293879Z","shell.execute_reply.started":"2024-09-19T13:49:41.428918Z","shell.execute_reply":"2024-09-19T13:49:44.292877Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Datasetin içerisindeki verilere yorum yapabilmek adına ilk 5 satırı görüntüledim.","metadata":{"id":"7NqthidkB3KE"}},{"cell_type":"code","source":"df.head()","metadata":{"id":"tyry7oDH_7-r","outputId":"d5adfebd-8e93-4e15-84fe-b32545893129","execution":{"iopub.status.busy":"2024-09-19T13:49:44.295331Z","iopub.execute_input":"2024-09-19T13:49:44.295768Z","iopub.status.idle":"2024-09-19T13:49:44.333211Z","shell.execute_reply.started":"2024-09-19T13:49:44.295723Z","shell.execute_reply":"2024-09-19T13:49:44.332164Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Elimdeki sütunların isimlerine etraflıca göz gezdirdim.","metadata":{"id":"GL18V8_8JJ4N"}},{"cell_type":"code","source":"df.columns","metadata":{"id":"0htl1lwgVQpx","outputId":"4c714b3d-9061-405d-da3b-f340fe11c45f","execution":{"iopub.status.busy":"2024-09-19T13:49:44.334378Z","iopub.execute_input":"2024-09-19T13:49:44.334712Z","iopub.status.idle":"2024-09-19T13:49:44.341804Z","shell.execute_reply.started":"2024-09-19T13:49:44.334678Z","shell.execute_reply":"2024-09-19T13:49:44.340728Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Henüz hedef değişkenimi seçmediğim için kendime bir hedef değişken bulmaya çalıştım. Dataset içerisinde \"class\" sütununun hedef değişken olmaya uygun olup olmadığını test ettim. Uygun olduğuna karar verdim.","metadata":{"id":"bU0sO6SWVvTR"}},{"cell_type":"code","source":"df[\"class\"].unique()","metadata":{"id":"Rhud7obfVSPf","outputId":"be1d47e0-e068-484e-b908-8ac36131906c","execution":{"iopub.status.busy":"2024-09-19T13:49:44.343679Z","iopub.execute_input":"2024-09-19T13:49:44.34411Z","iopub.status.idle":"2024-09-19T13:49:44.410308Z","shell.execute_reply.started":"2024-09-19T13:49:44.344064Z","shell.execute_reply":"2024-09-19T13:49:44.40912Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Sütundaki unique verileri toplam adetlerine göre pie chart ile görselleştirdim ve aralarındaki sayısal farkın çok olup olmadığını teyit ettim. Teyitin ardından iki label arasında adet olarak çok fark olmadığı sonucuna vardım. Böylece sayıları yaklaştırma ihtiyacı duymadım.","metadata":{"id":"IIgUNMgNJ54F"}},{"cell_type":"code","source":"df[\"class\"].value_counts().plot(kind='pie', colors=[\"white\",'black'], wedgeprops={'linewidth': 1, 'edgecolor': 'black'})","metadata":{"id":"MYH-YGb3BrCT","outputId":"ba4cca51-eb7e-4d26-953e-b963df32c35b","execution":{"iopub.status.busy":"2024-09-19T13:49:44.411841Z","iopub.execute_input":"2024-09-19T13:49:44.412296Z","iopub.status.idle":"2024-09-19T13:49:44.637688Z","shell.execute_reply.started":"2024-09-19T13:49:44.412246Z","shell.execute_reply":"2024-09-19T13:49:44.63654Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Veri setimin içerisindeki veri türlerine ve null değer sayılarına göz gezdirdim.","metadata":{"id":"5_04i3MXCG_F"}},{"cell_type":"code","source":"null_values = df.isnull().sum()\ndf.info(verbose=True, show_counts=True)","metadata":{"id":"ob4ma4QtbxPp","outputId":"727dcf1e-e1fb-4830-851b-50d38ae9f2fb","execution":{"iopub.status.busy":"2024-09-19T13:49:44.642676Z","iopub.execute_input":"2024-09-19T13:49:44.643469Z","iopub.status.idle":"2024-09-19T13:49:46.259725Z","shell.execute_reply.started":"2024-09-19T13:49:44.643415Z","shell.execute_reply":"2024-09-19T13:49:46.258574Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Çok fazla sayı kafa karıştırdığından dolayı durumu bar plot ile görselleştirip elimine edeceğim sütunları seçmeye çalıştım. Oluşturduğum grafikte içerisinde null değer barındıran 9 sütun gözlemledim.","metadata":{"id":"fVdNGNZNMrTD"}},{"cell_type":"code","source":"df.isnull().sum().sort_values(ascending=False).head(10).plot(kind='barh', color=\"black\")","metadata":{"id":"wsI-kDBg-e8a","outputId":"a81ab24e-f2e2-4d63-f46a-01daaa30baf1","execution":{"iopub.status.busy":"2024-09-19T13:49:46.261153Z","iopub.execute_input":"2024-09-19T13:49:46.261612Z","iopub.status.idle":"2024-09-19T13:49:47.268636Z","shell.execute_reply.started":"2024-09-19T13:49:46.261566Z","shell.execute_reply":"2024-09-19T13:49:47.267543Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"O da yetmedi biraz daha kafamda netleşsin diye yüzdeliklerine de bakmam gerekti.\nAralarında çok null değer barındıran sütunları kaldırmak ile doldurmak arasında kaldığım için içerilerindeki unique değerler sayılarına baktım. Dataset hakkında birçok bilgiyi tek tabloda ortaya döktüm son kararlarımı vermek için.","metadata":{"id":"TuuVCzGvCW9s"}},{"cell_type":"code","source":"for column in df.columns:\n    if null_values[column] > 1:\n      print(\"Sütun Adı:                       \",column,  \"\\nUnique değer sayısı:             \", df[column].nunique())\n      print(\"Null değer yüzdesi:               %\",(df[column].isnull().sum() / len(df[column])).round(2) * 100),\n      print(\"Null değer sayısı:               \", df[column].isnull().sum())\n      print(\"Unique değerler:                 \", df[column].unique())\n\n      print(\"----------------------------------------\")","metadata":{"id":"dE8zHvISA5iV","outputId":"5f74af54-bf2d-4188-8f1e-72a1c54d9a7a","execution":{"iopub.status.busy":"2024-09-19T13:49:47.270081Z","iopub.execute_input":"2024-09-19T13:49:47.270569Z","iopub.status.idle":"2024-09-19T13:49:48.356685Z","shell.execute_reply.started":"2024-09-19T13:49:47.270532Z","shell.execute_reply":"2024-09-19T13:49:48.35538Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Yüzde 80'leri geçen null değerlere sahip olan sütunları görünce o sütunları komple kaldırmaya karar verdim. ( veil-type sütunu zaten tek bir unique değer taşıdığı için hiçbir anlam ifade etmiyormuş. ) Aynı zamanda %60 null değer barındıran stem-surface sütununu da kaldırmaya karar verdim çünkü çok unique değer barındıran ve yarısından fazlası null olan bir sütunu median mode vesaire gibi bir methodla doldurmak dengeyi şaşırabilirdi.\n\n\nAşağıda ise çıkarmak istediğim sütunları filtreledim.","metadata":{"id":"gy_KKNJWRMHp"}},{"cell_type":"code","source":"for column in df.columns:\n    if null_values[column] > 8.5*len(df)/10:\n      print(\"Sütun Adı:                       \",column,  \"\\nUnique değer sayısı:             \", df[column].nunique())\n      print(\"Null değer yüzdesi:               %\",(df[column].isnull().sum() / len(df[column])).round(2) * 100),\n      print(\"Null değer sayısı:               \", df[column].isnull().sum())\n      print(\"Unique değerler:                 \", df[column].unique())\n\n      print(\"----------------------------------------\")","metadata":{"id":"BWeIO7zcWfpO","outputId":"d984a718-cf07-4d1a-fba3-104c10db54d5","execution":{"iopub.status.busy":"2024-09-19T13:49:48.358001Z","iopub.execute_input":"2024-09-19T13:49:48.358355Z","iopub.status.idle":"2024-09-19T13:49:48.778528Z","shell.execute_reply.started":"2024-09-19T13:49:48.358321Z","shell.execute_reply":"2024-09-19T13:49:48.77742Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Ve ardından bu gereksiz sütunları attım","metadata":{"id":"_Vk3ybkqYCBs"}},{"cell_type":"code","source":"df.drop(columns=[\"veil-type\",'stem-root','veil-color','spore-print-color',\"stem-surface\"], inplace=True)","metadata":{"id":"yfPCbeyDX_XF","execution":{"iopub.status.busy":"2024-09-19T13:49:48.779848Z","iopub.execute_input":"2024-09-19T13:49:48.780199Z","iopub.status.idle":"2024-09-19T13:49:48.896158Z","shell.execute_reply.started":"2024-09-19T13:49:48.780165Z","shell.execute_reply":"2024-09-19T13:49:48.895065Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Elimde hala çok fazla sütun olduğunu düşündüğüm için tekrardan bir info yapıp baktım","metadata":{"id":"1B6MwKOWfywx"}},{"cell_type":"code","source":"df.info()","metadata":{"id":"sQe9P30EbNQb","outputId":"35a19527-cfd4-4273-9930-91f12a2a1c4c","execution":{"iopub.status.busy":"2024-09-19T13:49:48.897526Z","iopub.execute_input":"2024-09-19T13:49:48.897879Z","iopub.status.idle":"2024-09-19T13:49:49.500476Z","shell.execute_reply.started":"2024-09-19T13:49:48.897842Z","shell.execute_reply":"2024-09-19T13:49:49.499167Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Elimdeki kategorik sütunların class sütunuyla olan korelasyon değerlerini inceledim.","metadata":{"id":"xRO-oeonUyD1"}},{"cell_type":"code","source":"# Kategorik verilerin korelasyonunu bulmak için Cramer's V fonksiyonu oluşturdum\n\ndef cramers_v(x, y):\n    confusion_matrix = pd.crosstab(x, y)\n    chi2 = chi2_contingency(confusion_matrix)[0]\n    n = confusion_matrix.sum().sum()\n    r, k = confusion_matrix.shape\n    return np.sqrt(chi2 / (n * (min(r, k) - 1)))","metadata":{"id":"E0uPvMBibYZV","execution":{"iopub.status.busy":"2024-09-19T13:49:49.502552Z","iopub.execute_input":"2024-09-19T13:49:49.503011Z","iopub.status.idle":"2024-09-19T13:49:49.509281Z","shell.execute_reply.started":"2024-09-19T13:49:49.502963Z","shell.execute_reply":"2024-09-19T13:49:49.508145Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(\"cap-shape ile korelasyonu:            \", cramers_v(df['class'], df['cap-shape']))\nprint(\"cap-surface ile korelasyonu:          \", cramers_v(df['class'], df['cap-surface']))\nprint(\"cap-color ile korelasyonu:            \", cramers_v(df['class'], df['cap-color']))\nprint(\"does-bruise-or-bleed ile korelasyonu: \", cramers_v(df['class'], df['does-bruise-or-bleed']))\nprint(\"gill attachment ile korelasyonu       \", cramers_v(df['class'], df['gill-attachment']))\nprint(\"gill-spacing ile korelasyonu          \", cramers_v(df['class'], df['gill-spacing']))\nprint(\"gill-color ile korelasyonu            \", cramers_v(df['class'], df['gill-color']))\nprint(\"stem-color ile korelasyonu            \", cramers_v(df['class'], df['stem-color']))\nprint(\"has-ring ile korelasyonu              \", cramers_v(df['class'], df['has-ring']))\nprint(\"ring-type ile korelasyonu             \", cramers_v(df['class'], df['ring-type']))\nprint(\"habitat ile korelasyonu               \", cramers_v(df['class'], df['habitat']))\nprint(\"season ile korelasyonu            \", cramers_v(df['class'], df['season']))","metadata":{"id":"zxYmGbv6eC9t","outputId":"b15522d7-0b64-47df-d740-c00e78c97cb4","execution":{"iopub.status.busy":"2024-09-19T13:49:49.510918Z","iopub.execute_input":"2024-09-19T13:49:49.511285Z","iopub.status.idle":"2024-09-19T13:49:51.848585Z","shell.execute_reply.started":"2024-09-19T13:49:49.511247Z","shell.execute_reply":"2024-09-19T13:49:51.847172Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Yukarıda korelasyonlara baktıktan sonra çok ama çok ufak bağlantı çıkan sütunları kaldırdım.","metadata":{"id":"eorAiEoogIR6"}},{"cell_type":"code","source":"df.drop(columns=[\"does-bruise-or-bleed\",'has-ring'], inplace=True)","metadata":{"id":"qI0lxC7SgcVf","execution":{"iopub.status.busy":"2024-09-19T13:49:51.850152Z","iopub.execute_input":"2024-09-19T13:49:51.850934Z","iopub.status.idle":"2024-09-19T13:49:51.99175Z","shell.execute_reply.started":"2024-09-19T13:49:51.850894Z","shell.execute_reply":"2024-09-19T13:49:51.990561Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Class sınıfını bu sefer integer olarak sınıflandırıp float columnlar ile aralarındaki korelasyon matrixini yapıp bağlantıları buldum.","metadata":{"id":"vI0UCDnbguCp"}},{"cell_type":"code","source":"df['class'] = df['class'].map({'p': 0, 'e': 1})","metadata":{"id":"TBd7YYzRhc2e","execution":{"iopub.status.busy":"2024-09-19T13:49:51.993363Z","iopub.execute_input":"2024-09-19T13:49:51.993751Z","iopub.status.idle":"2024-09-19T13:49:52.049355Z","shell.execute_reply.started":"2024-09-19T13:49:51.993716Z","shell.execute_reply":"2024-09-19T13:49:52.048135Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"corr_matrix = df.select_dtypes(include=['float64',\"int64\"]).corr()\ncorr_matrix","metadata":{"id":"GTHprIhhaxwx","outputId":"c72e777a-10e3-43cc-cc30-a23d35961fc2","execution":{"iopub.status.busy":"2024-09-19T13:49:52.050801Z","iopub.execute_input":"2024-09-19T13:49:52.051146Z","iopub.status.idle":"2024-09-19T13:49:52.135705Z","shell.execute_reply.started":"2024-09-19T13:49:52.051112Z","shell.execute_reply":"2024-09-19T13:49:52.134477Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"stem-height'ın da class ile korelasyonu çok az olduğu için onu da çıkarmaya karar verdim.","metadata":{"id":"llfh1rRPjOW4"}},{"cell_type":"code","source":"df.drop(columns=[\"stem-height\"], inplace=True)","metadata":{"id":"uaIlQdEwjUsn","execution":{"iopub.status.busy":"2024-09-19T13:49:52.137354Z","iopub.execute_input":"2024-09-19T13:49:52.137961Z","iopub.status.idle":"2024-09-19T13:49:52.26902Z","shell.execute_reply.started":"2024-09-19T13:49:52.137912Z","shell.execute_reply":"2024-09-19T13:49:52.267747Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Artık Null değerleri mode'lar ile doldurmaya başlayabiliriz.","metadata":{"id":"j0EOWuiijfxe"}},{"cell_type":"code","source":"imputer = SimpleImputer(strategy='most_frequent')\n\ndf_array = imputer.fit_transform(df)\n\ndf = pd.DataFrame(df_array, columns=df.columns)","metadata":{"id":"6FKZcUtfhBU-","execution":{"iopub.status.busy":"2024-09-19T13:49:52.270426Z","iopub.execute_input":"2024-09-19T13:49:52.270908Z","iopub.status.idle":"2024-09-19T13:49:55.245667Z","shell.execute_reply.started":"2024-09-19T13:49:52.270861Z","shell.execute_reply":"2024-09-19T13:49:55.244689Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Önce array'e dönüştürüp geri dataframe'e çevirdiğim için Dtype'ların değişip değişmediğini kontrol ettim","metadata":{"id":"OtlIEb2Og1jO"}},{"cell_type":"code","source":"df.info(show_counts=True)","metadata":{"id":"jnyvnixbZpy_","outputId":"02506392-16f3-4302-deaf-a8c490fd1195","execution":{"iopub.status.busy":"2024-09-19T13:49:55.247386Z","iopub.execute_input":"2024-09-19T13:49:55.247838Z","iopub.status.idle":"2024-09-19T13:49:55.854968Z","shell.execute_reply.started":"2024-09-19T13:49:55.247789Z","shell.execute_reply":"2024-09-19T13:49:55.853766Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Bazı float olan sütunların object'e dönüştüğünü fark ettim ve bunu düzelttim","metadata":{"id":"fJmk6QUtzpQZ"}},{"cell_type":"code","source":"df[\"class\"] = df[\"class\"].astype(int)\ndf[\"stem-width\"] = df[\"stem-width\"].astype(float)\ndf[\"cap-diameter\"] = df[\"cap-diameter\"].astype(float)","metadata":{"id":"4t0uw5lbzyOz","execution":{"iopub.status.busy":"2024-09-19T13:49:55.856363Z","iopub.execute_input":"2024-09-19T13:49:55.856713Z","iopub.status.idle":"2024-09-19T13:49:55.957317Z","shell.execute_reply.started":"2024-09-19T13:49:55.85668Z","shell.execute_reply":"2024-09-19T13:49:55.956351Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Data artık temizlendi. Artık makine öğrenmesi tekniklerini uygulamaya başlıyorum.","metadata":{"id":"tFqP2bljhg7R"}},{"cell_type":"code","source":"df.head()","metadata":{"id":"jTJ2vqx4VU_F","outputId":"330ce998-0e07-489b-fc6f-f58939c659f8","execution":{"iopub.status.busy":"2024-09-19T13:49:55.958685Z","iopub.execute_input":"2024-09-19T13:49:55.959043Z","iopub.status.idle":"2024-09-19T13:49:55.976889Z","shell.execute_reply.started":"2024-09-19T13:49:55.959002Z","shell.execute_reply":"2024-09-19T13:49:55.975652Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"LabelEncoder kullanarak tüm stringleri integer formatına getirdim.","metadata":{"id":"ifccCdyVuFQq"}},{"cell_type":"code","source":"le = LabelEncoder()\n\nfor column in df.select_dtypes(include=['object']).columns:\n    df[column] = le.fit_transform(df[column])","metadata":{"id":"ng6CDLr9nLul","execution":{"iopub.status.busy":"2024-09-19T13:49:55.978429Z","iopub.execute_input":"2024-09-19T13:49:55.978822Z","iopub.status.idle":"2024-09-19T13:49:58.067614Z","shell.execute_reply.started":"2024-09-19T13:49:55.978785Z","shell.execute_reply":"2024-09-19T13:49:58.066367Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"x = independent variables\n\ny = target","metadata":{"id":"mWtkZ7iuuUZz"}},{"cell_type":"code","source":"x = df.drop(\"class\", axis=1)\ny = df[\"class\"]","metadata":{"id":"k6mLwLYSiYA-","execution":{"iopub.status.busy":"2024-09-19T13:49:58.06908Z","iopub.execute_input":"2024-09-19T13:49:58.069554Z","iopub.status.idle":"2024-09-19T13:49:58.112228Z","shell.execute_reply.started":"2024-09-19T13:49:58.069505Z","shell.execute_reply":"2024-09-19T13:49:58.111081Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Veri miktarı yüksek olduğu için test oranı %20 olsa yeter diye düşündüm","metadata":{"id":"rUqqdqKrw4Tj"}},{"cell_type":"code","source":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)","metadata":{"id":"B81upGbGimfR","execution":{"iopub.status.busy":"2024-09-19T13:49:58.117277Z","iopub.execute_input":"2024-09-19T13:49:58.117674Z","iopub.status.idle":"2024-09-19T13:49:58.369043Z","shell.execute_reply.started":"2024-09-19T13:49:58.117636Z","shell.execute_reply":"2024-09-19T13:49:58.367844Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Önce MinMaxScaler kullanarak modeldeki x_train ve x_test'in verilerini 0 ile 1 arasına sabitledim.","metadata":{"id":"dWyRsWN_xGth"}},{"cell_type":"code","source":"scaler=MinMaxScaler()\nx_train = scaler.fit_transform(x_train)\nx_test = scaler.transform(x_test)","metadata":{"id":"lTDVwYvH2iuO","execution":{"iopub.status.busy":"2024-09-19T13:49:58.37041Z","iopub.execute_input":"2024-09-19T13:49:58.370779Z","iopub.status.idle":"2024-09-19T13:49:58.517836Z","shell.execute_reply.started":"2024-09-19T13:49:58.370743Z","shell.execute_reply":"2024-09-19T13:49:58.516645Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Ardından Decision Tree ile modellemeleri oturtmaya başladım.\n\nDecision Tree algoritması overfitting yaşatmasın diye maksimum derinliği 4,8,12 ve 15 olarak teker teker seçip çıktı aldım.\n\nAralarından en optimum seçenek 12 derinliği oldu ve garanti olsun diye modelin derinliğini 10'a sabitledim","metadata":{"id":"Yja3x41ExRvf"}},{"cell_type":"code","source":"for i in [4,8,12,15]:\n  decision_tree_model = DecisionTreeClassifier(max_depth=i, random_state=42)\n  decision_tree_model.fit(x_train, y_train)\n  print(f\"max depth: {i}, accuracy:\", decision_tree_model.score(x_test,y_test))","metadata":{"id":"XOkyclKWur5H","outputId":"df24a167-d6a6-4358-c1ee-32dfa8ff1561","execution":{"iopub.status.busy":"2024-09-19T13:49:58.51902Z","iopub.execute_input":"2024-09-19T13:49:58.519363Z","iopub.status.idle":"2024-09-19T13:50:24.347638Z","shell.execute_reply.started":"2024-09-19T13:49:58.519329Z","shell.execute_reply":"2024-09-19T13:50:24.346319Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"decision_tree_model = DecisionTreeClassifier(max_depth=10, random_state=42)\ndecision_tree_model.fit(x_train, y_train)\ndecision_tree_model.score(x_test,y_test)","metadata":{"id":"9MKUSSM4x4fB","outputId":"b972e6b8-0713-495f-e85d-8bef7e57dc8c","execution":{"iopub.status.busy":"2024-09-19T13:50:24.348912Z","iopub.execute_input":"2024-09-19T13:50:24.349326Z","iopub.status.idle":"2024-09-19T13:50:31.552044Z","shell.execute_reply.started":"2024-09-19T13:50:24.349289Z","shell.execute_reply":"2024-09-19T13:50:31.550771Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Logistic regression denedim bir işe yarar mı diye, yaramadı.","metadata":{"id":"eWAVzHzM0N9O"}},{"cell_type":"code","source":"logistic_model = LogisticRegression()\nlogistic_model.fit(x_train,y_train)\nlogistic_model.score(x_test,y_test)","metadata":{"id":"giJcQl0TRq_O","outputId":"5ac9c194-e9c9-4d8a-e294-c10248151b67","execution":{"iopub.status.busy":"2024-09-19T13:50:31.553465Z","iopub.execute_input":"2024-09-19T13:50:31.553898Z","iopub.status.idle":"2024-09-19T13:50:34.012517Z","shell.execute_reply.started":"2024-09-19T13:50:31.553858Z","shell.execute_reply":"2024-09-19T13:50:34.011365Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Decision Tree'nin overfittingini azaltıp daha güvenilir bir sonuç görebilmek için Random Forest denedim. maksimum derinliği daha az overfitting olsun diye 10'a sabitledim.\nn_estimators kısmında ise ne kadar çok ağaç kullanırsa o kadar az overfitting riski olur diye for döngüsü içerisinde ağaç sayılarını gözlemledim.\n\nSonucunda ise estimator sayısı 90 olduğunda accuracy'nin yükselişi durakladı ve benim için optimum estimator sayısını 90 olarak buldum ve atadım.","metadata":{"id":"ctx8LJw90WbA"}},{"cell_type":"code","source":"for i in [10,50,90,120,150,200]:\n  RandomForest_model = RandomForestClassifier(max_depth=10, n_estimators=i, random_state=42)\n  RandomForest_model.fit(x_train,y_train)\n  print(f\"n_estimator: {i}, accuracy:\",RandomForest_model.score(x_test,y_test))","metadata":{"id":"JqK2KTyCXwNV","outputId":"47ad72f4-1209-4461-861a-8709033b9077","execution":{"iopub.status.busy":"2024-09-19T13:50:34.017046Z","iopub.execute_input":"2024-09-19T13:50:34.018059Z","iopub.status.idle":"2024-09-19T14:06:54.535389Z","shell.execute_reply.started":"2024-09-19T13:50:34.017996Z","shell.execute_reply":"2024-09-19T14:06:54.533622Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"RandomForest_model = RandomForestClassifier(max_depth=10, n_estimators=90, random_state=42)\nRandomForest_model.fit(x_train,y_train)\nRandomForest_model.score(x_test,y_test)","metadata":{"id":"px0Q3o911EEI","outputId":"043eda74-bc27-446b-d6eb-17d0c6a47c15","execution":{"iopub.status.busy":"2024-09-19T14:06:54.537921Z","iopub.execute_input":"2024-09-19T14:06:54.538327Z","iopub.status.idle":"2024-09-19T14:09:15.451358Z","shell.execute_reply.started":"2024-09-19T14:06:54.538279Z","shell.execute_reply":"2024-09-19T14:09:15.44996Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Kurduğum öğrenme eğrileri sonucunda overfitting olmadığı kanısına vardım ve daha net bi sonuca varabilmek için Learning Curve'ler oluşturdum. Learning Curve'lere de bakınca overfitting olmadığı netleşmiş oldu.","metadata":{"id":"nBVg1Y1cHEAI"}},{"cell_type":"code","source":"train_sizes, train_scores, test_scores = learning_curve(decision_tree_model, x, y, cv=5, n_jobs=-1,\n                                                        train_sizes=np.linspace(0.1, 1.0, 5))\n\ntrain_mean = np.mean(train_scores, axis=1)\ntest_mean = np.mean(test_scores, axis=1)\n\nplt.plot(train_sizes, train_mean, color=\"black\", label=\"Training score\")\nplt.plot(train_sizes, test_mean, color=\"red\", label=\"Cross-validation score\")\nplt.xlabel(\"Training Set Size\")\nplt.ylabel(\"Accuracy\")\nplt.legend(loc=\"best\")\nplt.show()","metadata":{"id":"diIUaMj5deqi","outputId":"b8aaed58-810b-44c7-ce13-da57eea2aff2","execution":{"iopub.status.busy":"2024-09-19T14:09:15.452827Z","iopub.execute_input":"2024-09-19T14:09:15.453171Z","iopub.status.idle":"2024-09-19T14:09:52.695135Z","shell.execute_reply.started":"2024-09-19T14:09:15.453136Z","shell.execute_reply":"2024-09-19T14:09:52.693766Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_sizes, train_scores, test_scores = learning_curve(logistic_model, x, y, cv=5, n_jobs=-1,\n                                                        train_sizes=np.linspace(0.1, 1.0, 5))\n\ntrain_mean = np.mean(train_scores, axis=1)\ntest_mean = np.mean(test_scores, axis=1)\n\nplt.plot(train_sizes, train_mean, color=\"black\", label=\"Training score\")\nplt.plot(train_sizes, test_mean, color=\"red\", label=\"Cross-validation score\")\nplt.xlabel(\"Training Set Size\")\nplt.ylabel(\"Accuracy\")\nplt.legend(loc=\"best\")\nplt.show()","metadata":{"id":"q7ZVQcyvkd2N","outputId":"293ba35d-6046-4896-84dc-d618724122cf","execution":{"iopub.status.busy":"2024-09-19T14:09:52.697197Z","iopub.execute_input":"2024-09-19T14:09:52.697735Z","iopub.status.idle":"2024-09-19T14:10:13.90283Z","shell.execute_reply.started":"2024-09-19T14:09:52.697682Z","shell.execute_reply":"2024-09-19T14:10:13.901715Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_sizes, train_scores, test_scores = learning_curve(RandomForest_model,x,y,cv=5, n_jobs = -1,train_sizes=np.linspace(0.1, 1.0, 5))\n\ntrain_mean = np.mean(train_scores, axis=1)\ntest_mean = np.mean(test_scores, axis=1)\n\nplt.plot(train_sizes, train_mean, color=\"black\", label=\"Training score\")\nplt.plot(train_sizes, test_mean, color=\"red\", label=\"Cross-validation score\")\nplt.xlabel(\"Training Set Size\")\nplt.ylabel(\"Accuracy\")\nplt.legend(loc=\"best\")\nplt.show()","metadata":{"id":"BQ6qhHj85Qi1","outputId":"c60ae521-a78f-4c70-f4dd-34619180f1d7","execution":{"iopub.status.busy":"2024-09-19T14:10:13.904403Z","iopub.execute_input":"2024-09-19T14:10:13.904806Z","iopub.status.idle":"2024-09-19T14:22:08.409855Z","shell.execute_reply.started":"2024-09-19T14:10:13.904766Z","shell.execute_reply":"2024-09-19T14:22:08.408627Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Ardından kullandığım modellerin tek tek sınıflandırma raporlarını ve accuracylerini çıkardım.\nTrain için de çıkarma sebebim train ile test arasında büyük bir fark var mı görebilmek. Büyük fark da olmadığına göre artık çokçokçok net bir biçimde overfitting yok diyebiliriz. Modellerin accuracy'lerini ise aşağıdaki textbox'ta inceliyorum.","metadata":{"id":"8rcgxc92Cp_Y"}},{"cell_type":"code","source":"decision_tree_predictions = decision_tree_model.predict(x_test)\nlogistic_model_predictions = logistic_model.predict(x_test)\nRandomForest_predictions = RandomForest_model.predict(x_test)\n\ndecision_tree_train_predictions = decision_tree_model.predict(x_train)\nlogistic_model_train_predictions = logistic_model.predict(x_train)\nRandomForest_train_predictions = RandomForest_model.predict(x_train)\n\ndecision_tree_accuracy = accuracy_score(y_test, decision_tree_predictions)\nlogistic_model_accuracy = accuracy_score(y_test, logistic_model_predictions)\nRandomForest_accuracy = accuracy_score(y_test, RandomForest_predictions)\n\ndecision_tree_train_accuracy = accuracy_score(y_train, decision_tree_train_predictions)\nlogistic_model_train_accuracy = accuracy_score(y_train, logistic_model_train_predictions)\nRandomForest_train_accuracy = accuracy_score(y_train, RandomForest_train_predictions)\n\nprint(\"Decision Tree Accuracy:\", decision_tree_accuracy)\nprint(\"Logistic Model Accuracy:\", logistic_model_accuracy)\nprint(\"Random Forest Model Accuracy:\", RandomForest_accuracy,\"\\n\\n\")\n\nprint(\"Decision Tree Train Accuracy:\", decision_tree_train_accuracy)\nprint(\"Logistic Model Train Accuracy:\", logistic_model_train_accuracy)\nprint(\"Random Forest Model Train Accuracy:\", RandomForest_train_accuracy,\"\\n\\n\")\n\nprint(\"Decision Model Report:\", classification_report(y_test, decision_tree_predictions),\"\\n\\n\")\nprint(\"Logistic Model Report:\",classification_report(y_test, logistic_model_predictions),\"\\n\\n\")\nprint(\"Random Forest Model Report:\",classification_report(y_test, RandomForest_predictions))","metadata":{"id":"C4dc16yg0qIF","outputId":"f84fb487-efc6-4b45-b663-f679447df0de","execution":{"iopub.status.busy":"2024-09-19T14:22:08.411676Z","iopub.execute_input":"2024-09-19T14:22:08.412152Z","iopub.status.idle":"2024-09-19T14:22:19.357791Z","shell.execute_reply.started":"2024-09-19T14:22:08.412102Z","shell.execute_reply":"2024-09-19T14:22:19.356156Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Overfitting olmadan çok daha fazla oran alabilecek olmama rağmen skoru elimden geldiğince güvenilir tutmaya çalıştım. 1-0 olsun bizim olsun diyip 3-4-5 kovalamadım. Böylece elimdeki modellerin verdikleri sonuçlar:\n\nDecision Tree Accuracy: 0.89615\n\nLogistic Model Accuracy: 0.6197\n\nRandom Forest Model Accuracy: 0.97995\n\nEn iyi modeli Random Forest yaptı.\n\n> 1st - Random Forest Model Accuracy: 0.97995\n\n","metadata":{"id":"hZnGL9uqDRNE"}},{"cell_type":"code","source":"fig = plt.figure(figsize=(100,100))\nplot_tree(decision_tree_model,\n              max_depth=3,\n              feature_names=df.drop(columns=\"class\").columns,\n              filled=True,\n              impurity=False,\n              rounded=True,\n              precision=1)\n\nplt.show()","metadata":{"id":"ERsdT95SJg1b","outputId":"59aa01ce-a2c0-4fed-9243-5b7a315d628f","execution":{"iopub.status.busy":"2024-09-19T14:22:19.359143Z","iopub.execute_input":"2024-09-19T14:22:19.359544Z","iopub.status.idle":"2024-09-19T14:22:26.90434Z","shell.execute_reply.started":"2024-09-19T14:22:19.359496Z","shell.execute_reply":"2024-09-19T14:22:26.90284Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Yukarıda son olarak Tree çizdirdim. Nolmuş daha iyi görebileyim diye. Her şey yolunda gibi görünüyor.","metadata":{"id":"0oVu6z9-Fc4-"}},{"cell_type":"markdown","source":"Supervised Learning için modelim 0.97995 skoruyla başarıyla tamamlanmış oldu (tick)","metadata":{"id":"7PmzDfLsFoOf"}},{"cell_type":"markdown","source":"Unsupervised Learning için KMeans kullandım ama fayda görmedim (_silhouette=0.37_). 12 sütun çok geldiği için diye düşündüm hemen PCA uyguladım. Component sayısını 2'ye indirgeyip tekrar KMeans yaptım.","metadata":{"id":"ApGypF2dCNsr"}},{"cell_type":"code","source":"pca = PCA(n_components=2)\nx_pca = pca.fit_transform(x)\n\nkmeans = KMeans(n_clusters=2, random_state=42)\nkmeans.fit(x_pca)\nclusters = kmeans.predict(x_pca)\ndf['cluster'] = clusters\nlabels = kmeans.labels_\n\nplt.figure(figsize=(8, 6))\nsns.scatterplot(x=x_pca[:, 0], y=x_pca[:, 1], hue=clusters, palette='viridis', s=100, alpha=0.7)\nplt.title(\"KMeans Clustering with PCA\")\nplt.xlabel(\"PCA Component 1\")\nplt.ylabel(\"PCA Component 2\")\nplt.legend(title=\"Cluster\")\nplt.show()\n\n#silhouette_avg = silhouette_score(x_pca, clusters)\n#print(\"Silhouette Score with PCA:\", silhouette_avg)","metadata":{"id":"f8Cz3olMWq0p","outputId":"ffecbfc6-4921-475d-bc31-737f46bbebac","execution":{"iopub.status.busy":"2024-09-19T16:18:24.007395Z","iopub.execute_input":"2024-09-19T16:18:24.008003Z","iopub.status.idle":"2024-09-19T16:19:04.803332Z","shell.execute_reply.started":"2024-09-19T16:18:24.007958Z","shell.execute_reply":"2024-09-19T16:19:04.801775Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"matching_count = (df['class'] == df['cluster']).sum()\nmatching_count\n\nif matching_count/df.shape[0] < 0.5:\n  matching_count = df.shape[0] - matching_count\nelse:\n  matching_count = matching_count\n\nprint(\"Kmeans algoritmasının oluşturduğu cluster sınıfı ve zaten varolan class sınıfı arasındaki benzerlik yüzdesi:   %\", matching_count*100/df.shape[0])","metadata":{"id":"cc_smpx6BTbl","outputId":"2a25e8de-9520-4709-8ae1-0f436e16dc8e","execution":{"iopub.status.busy":"2024-09-19T16:20:35.503288Z","iopub.execute_input":"2024-09-19T16:20:35.503801Z","iopub.status.idle":"2024-09-19T16:20:35.517439Z","shell.execute_reply.started":"2024-09-19T16:20:35.503761Z","shell.execute_reply":"2024-09-19T16:20:35.516219Z"},"trusted":true},"execution_count":null,"outputs":[]}]}